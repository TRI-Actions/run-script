name: 'run-script'
description: 'Custom action to run arbitrary scripts'
inputs:
  path:
    description: 'path of script directory'
    default: '.'
outputs:
  stdout:
    description: "Std out"
    value: ${{ steps.output.outputs.stdout }}

runs:
  using: composite
  steps:
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
    
    - name: Run All Scripts
      id: all_scripts
      shell: bash
      run: |
        run_scripts() {
          local type=$1
          local command=$2

          echo "$type"
          echo "$command"

          if [ -d ${{ inputs.path }} ]; then
            array=(`find ${{ inputs.path }}/ -maxdepth 1 -name "*.$type"`)
            echo "$array"
            if [ ${#array[@]} -gt 0 ]; then
              for script in ${{ inputs.path }}/*.$type; do
                echo "" >> output.txt
                echo "$script output:" >> output.txt
                $command "$script" >> output.txt
                cat output.txt
              done
            fi
          elif [[ ${{ inputs.path }} == *.$type ]]; then
            echo "" >> output.txt
            echo "$script output:" >> output.txt
            $command "${{ inputs.path }}" >> output.txt 2>&1
          fi
        }

        if [ -f ${{ inputs.path }}/requirements.txt ]; then 
          python3 -m pip install --upgrade pip
          pip install -r ${{ inputs.path }}/requirements.txt
        fi

        touch output.txt

        run_scripts "sh" "bash"

        run_scripts "py" "python3"

        run_scripts "js" "node"

        run_scripts "java" "java -jar"

    - name: Set output
      if: always()
      id: output
      shell: bash
      run: |
        {
          echo 'stdout<<EOF'
          cat output.txt
          echo EOF
        } >> $GITHUB_OUTPUT
